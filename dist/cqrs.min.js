/*! cqrsjs-master - v0.1.0 - 2014-06-02 */
!function(a,b){"function"==typeof define&&define.amd?define(function(){return b(a)}):"undefined"!=typeof module?module.exports=b(a):"undefined"!=typeof a.exports?exports.cqrs=b(a):a.cqrs=b(a)}(this,function(a){"use strict";function b(a,b,c){var d=q.some(function(a){return a.commandName===b});d||q.push({owner:a,commandName:b,callback:c})}function c(a){q.filter(function(b){return b.owner===a}).forEach(function(a){q.splice(a,1)})}function d(a){var b=q.filter(function(b){return b.commandName===a});return b.length>0?b[0]:void 0}function e(a,b,c){r.push({owner:a,eventName:b,callback:c})}function f(a){r.filter(function(b){return b.owner===a}).forEach(function(a){var b=r.indexOf(a);r.splice(b,1)})}function g(a){return r.filter(function(b){return b.eventName===a})}function h(a,b,c,d){var e,f=s.filter(function(c){return c.owner===a&&c.aggregateName===b});f.length>0?e=f[0]:(e={owner:a,aggregateName:b,listeners:[]},s.push(e)),e.listeners.push({eventName:c,callback:d})}function i(a){s.filter(function(b){return b.owner===a}).forEach(function(a){var b=s.indexOf(a);s.splice(b,1)})}function j(a,b){return s.filter(function(b){return b.aggregateName===a}).map(function(a){return a.listeners}).reduce(function(a,b){return a.concat(b)},[]).filter(function(a){return a.eventName===b})}function k(a,b,c){var d=t.filter(function(a){return a.queryName===b}).length>0;d||t.push({owner:a,queryName:b,queryFunction:c})}function l(a){t.filter(function(b){return b.owner===a}).forEach(function(a){var b=t.indexOf(a);t.splice(b,1)})}function m(a){return t.filter(function(b){return b.queryName===a})[0]}function n(a,b,c){return a?[a,b,c].join("-"):[b,c].join("-")}function o(p,q){function r(a,b){var c=n(C,"qry",a);return o.debug&&console.log("cqrs - add query %s:%s",B,c),k(B,a,b),D}function s(){var b=Array.prototype.slice.call(arguments),c=b.shift(),d=n(C,"qry",c);return o.debug&&console.log("cqrs - query - call query %s:%s",B,d),new Promise(function(c,e){var f=m(d);if(f)try{var g=f.queryFunction.apply(a,b);c(g)}catch(h){e(h)}else e(new Error("unable to find the query: "+d))})}function t(a,c){var e=n(C,"cmd",a);return d(e)||(o.debug&&console.log("cqrs - handle - add handler %s:%s",B,e),b(B,e,c)),D}function v(a,b,c){return new Promise(function(e,f){var g=n(C,"cmd",a),h=d(g);h?(o.debug&&console.log("cqrs - send - send command %s %o %o",g,b,c),e(h.callback(b,c))):f(new Error("unable to found an handler"))})}function w(a,b){var c=n(C,"evt",a);return o.debug&&console.log("cqrs - listen - add listener %s:%s",B,c),e(B,c,b),D}function x(a,b,c){var d=n(C,"evt",a);o.debug&&console.log("cqrs - publish - publish event %s %o %o",d,b,c);var e=g(d),f=e.map(function(a){return new Promise(function(d,e){try{var f=a.callback(b,c);d(f)}catch(g){e(g)}})});return Promise.all(f)}function y(a,b){function c(a,b,c){var d=n(C,"evt",a);o.debug&&console.log("cqrs - aggregate apply - %s:%s:%s",B,g,d);var e=j(g,d).map(function(a){return new Promise(function(d,e){try{var f=a.callback(b,c);d(f)}catch(g){e(g)}})});return Promise.all(e).then(function(){var d=x(a,b,c);return d})}function d(a){return function(b,d){return a(b,d,c)}}function e(a,b){return t(a,d(b)),i}function f(a,b){var c=n(C,"evt",a);o.debug&&console.log("cqrs - aggregate listener - add listener %s:%s:%s",B,g,c),h(B,g,c,b)}var g=n(C,"agg",a),i={};return i.apply=c,i.handle=e,i.listen=f,b&&b(e,f),i}function z(){c(B),f(B),i(B),l(B)}var A,B,C,D;return D={},A="function"==typeof p&&p,q="function"==typeof p?q:p,B=q&&q.owner||"owner-"+u++,C=q&&q.namespace,D.register=r,D.call=s,D.handle=t,D.send=v,D.listen=w,D.publish=x,D.aggregate=y,D.destroy=z,A&&A(v,t,x,w,y,s,r),D}function p(a,b,c,d){q=a,r=b,s=c,t=d}var q=[],r=[],s=[],t=[],u=0;return o.setDefaultRepos=p,o});
//# sourceMappingURL=cqrs.map